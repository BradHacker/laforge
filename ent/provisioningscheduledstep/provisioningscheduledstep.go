// Code generated by ent, DO NOT EDIT.

package provisioningscheduledstep

import (
	"fmt"
	"io"
	"strconv"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the provisioningscheduledstep type in the database.
	Label = "provisioning_scheduled_step"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldRunTime holds the string denoting the run_time field in the database.
	FieldRunTime = "run_time"
	// EdgeProvisioningScheduledStepToStatus holds the string denoting the provisioningscheduledsteptostatus edge name in mutations.
	EdgeProvisioningScheduledStepToStatus = "ProvisioningScheduledStepToStatus"
	// EdgeProvisioningScheduledStepToScheduledStep holds the string denoting the provisioningscheduledsteptoscheduledstep edge name in mutations.
	EdgeProvisioningScheduledStepToScheduledStep = "ProvisioningScheduledStepToScheduledStep"
	// EdgeProvisioningScheduledStepToProvisionedHost holds the string denoting the provisioningscheduledsteptoprovisionedhost edge name in mutations.
	EdgeProvisioningScheduledStepToProvisionedHost = "ProvisioningScheduledStepToProvisionedHost"
	// EdgeProvisioningScheduledStepToScript holds the string denoting the provisioningscheduledsteptoscript edge name in mutations.
	EdgeProvisioningScheduledStepToScript = "ProvisioningScheduledStepToScript"
	// EdgeProvisioningScheduledStepToCommand holds the string denoting the provisioningscheduledsteptocommand edge name in mutations.
	EdgeProvisioningScheduledStepToCommand = "ProvisioningScheduledStepToCommand"
	// EdgeProvisioningScheduledStepToDNSRecord holds the string denoting the provisioningscheduledsteptodnsrecord edge name in mutations.
	EdgeProvisioningScheduledStepToDNSRecord = "ProvisioningScheduledStepToDNSRecord"
	// EdgeProvisioningScheduledStepToFileDelete holds the string denoting the provisioningscheduledsteptofiledelete edge name in mutations.
	EdgeProvisioningScheduledStepToFileDelete = "ProvisioningScheduledStepToFileDelete"
	// EdgeProvisioningScheduledStepToFileDownload holds the string denoting the provisioningscheduledsteptofiledownload edge name in mutations.
	EdgeProvisioningScheduledStepToFileDownload = "ProvisioningScheduledStepToFileDownload"
	// EdgeProvisioningScheduledStepToFileExtract holds the string denoting the provisioningscheduledsteptofileextract edge name in mutations.
	EdgeProvisioningScheduledStepToFileExtract = "ProvisioningScheduledStepToFileExtract"
	// EdgeProvisioningScheduledStepToAnsible holds the string denoting the provisioningscheduledsteptoansible edge name in mutations.
	EdgeProvisioningScheduledStepToAnsible = "ProvisioningScheduledStepToAnsible"
	// EdgeProvisioningScheduledStepToAgentTask holds the string denoting the provisioningscheduledsteptoagenttask edge name in mutations.
	EdgeProvisioningScheduledStepToAgentTask = "ProvisioningScheduledStepToAgentTask"
	// EdgeProvisioningStepToPlan holds the string denoting the provisioningsteptoplan edge name in mutations.
	EdgeProvisioningStepToPlan = "ProvisioningStepToPlan"
	// EdgeProvisioningScheduledStepToGinFileMiddleware holds the string denoting the provisioningscheduledsteptoginfilemiddleware edge name in mutations.
	EdgeProvisioningScheduledStepToGinFileMiddleware = "ProvisioningScheduledStepToGinFileMiddleware"
	// Table holds the table name of the provisioningscheduledstep in the database.
	Table = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToStatusTable is the table that holds the ProvisioningScheduledStepToStatus relation/edge.
	ProvisioningScheduledStepToStatusTable = "status"
	// ProvisioningScheduledStepToStatusInverseTable is the table name for the Status entity.
	// It exists in this package in order to avoid circular dependency with the "status" package.
	ProvisioningScheduledStepToStatusInverseTable = "status"
	// ProvisioningScheduledStepToStatusColumn is the table column denoting the ProvisioningScheduledStepToStatus relation/edge.
	ProvisioningScheduledStepToStatusColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_status"
	// ProvisioningScheduledStepToScheduledStepTable is the table that holds the ProvisioningScheduledStepToScheduledStep relation/edge.
	ProvisioningScheduledStepToScheduledStepTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToScheduledStepInverseTable is the table name for the ScheduledStep entity.
	// It exists in this package in order to avoid circular dependency with the "scheduledstep" package.
	ProvisioningScheduledStepToScheduledStepInverseTable = "scheduled_steps"
	// ProvisioningScheduledStepToScheduledStepColumn is the table column denoting the ProvisioningScheduledStepToScheduledStep relation/edge.
	ProvisioningScheduledStepToScheduledStepColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_scheduled_step"
	// ProvisioningScheduledStepToProvisionedHostTable is the table that holds the ProvisioningScheduledStepToProvisionedHost relation/edge.
	ProvisioningScheduledStepToProvisionedHostTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToProvisionedHostInverseTable is the table name for the ProvisionedHost entity.
	// It exists in this package in order to avoid circular dependency with the "provisionedhost" package.
	ProvisioningScheduledStepToProvisionedHostInverseTable = "provisioned_hosts"
	// ProvisioningScheduledStepToProvisionedHostColumn is the table column denoting the ProvisioningScheduledStepToProvisionedHost relation/edge.
	ProvisioningScheduledStepToProvisionedHostColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_provisioned_host"
	// ProvisioningScheduledStepToScriptTable is the table that holds the ProvisioningScheduledStepToScript relation/edge.
	ProvisioningScheduledStepToScriptTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToScriptInverseTable is the table name for the Script entity.
	// It exists in this package in order to avoid circular dependency with the "script" package.
	ProvisioningScheduledStepToScriptInverseTable = "scripts"
	// ProvisioningScheduledStepToScriptColumn is the table column denoting the ProvisioningScheduledStepToScript relation/edge.
	ProvisioningScheduledStepToScriptColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_script"
	// ProvisioningScheduledStepToCommandTable is the table that holds the ProvisioningScheduledStepToCommand relation/edge.
	ProvisioningScheduledStepToCommandTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToCommandInverseTable is the table name for the Command entity.
	// It exists in this package in order to avoid circular dependency with the "command" package.
	ProvisioningScheduledStepToCommandInverseTable = "commands"
	// ProvisioningScheduledStepToCommandColumn is the table column denoting the ProvisioningScheduledStepToCommand relation/edge.
	ProvisioningScheduledStepToCommandColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_command"
	// ProvisioningScheduledStepToDNSRecordTable is the table that holds the ProvisioningScheduledStepToDNSRecord relation/edge.
	ProvisioningScheduledStepToDNSRecordTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToDNSRecordInverseTable is the table name for the DNSRecord entity.
	// It exists in this package in order to avoid circular dependency with the "dnsrecord" package.
	ProvisioningScheduledStepToDNSRecordInverseTable = "dns_records"
	// ProvisioningScheduledStepToDNSRecordColumn is the table column denoting the ProvisioningScheduledStepToDNSRecord relation/edge.
	ProvisioningScheduledStepToDNSRecordColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_dns_record"
	// ProvisioningScheduledStepToFileDeleteTable is the table that holds the ProvisioningScheduledStepToFileDelete relation/edge.
	ProvisioningScheduledStepToFileDeleteTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToFileDeleteInverseTable is the table name for the FileDelete entity.
	// It exists in this package in order to avoid circular dependency with the "filedelete" package.
	ProvisioningScheduledStepToFileDeleteInverseTable = "file_deletes"
	// ProvisioningScheduledStepToFileDeleteColumn is the table column denoting the ProvisioningScheduledStepToFileDelete relation/edge.
	ProvisioningScheduledStepToFileDeleteColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_file_delete"
	// ProvisioningScheduledStepToFileDownloadTable is the table that holds the ProvisioningScheduledStepToFileDownload relation/edge.
	ProvisioningScheduledStepToFileDownloadTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToFileDownloadInverseTable is the table name for the FileDownload entity.
	// It exists in this package in order to avoid circular dependency with the "filedownload" package.
	ProvisioningScheduledStepToFileDownloadInverseTable = "file_downloads"
	// ProvisioningScheduledStepToFileDownloadColumn is the table column denoting the ProvisioningScheduledStepToFileDownload relation/edge.
	ProvisioningScheduledStepToFileDownloadColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_file_download"
	// ProvisioningScheduledStepToFileExtractTable is the table that holds the ProvisioningScheduledStepToFileExtract relation/edge.
	ProvisioningScheduledStepToFileExtractTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToFileExtractInverseTable is the table name for the FileExtract entity.
	// It exists in this package in order to avoid circular dependency with the "fileextract" package.
	ProvisioningScheduledStepToFileExtractInverseTable = "file_extracts"
	// ProvisioningScheduledStepToFileExtractColumn is the table column denoting the ProvisioningScheduledStepToFileExtract relation/edge.
	ProvisioningScheduledStepToFileExtractColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_file_extract"
	// ProvisioningScheduledStepToAnsibleTable is the table that holds the ProvisioningScheduledStepToAnsible relation/edge.
	ProvisioningScheduledStepToAnsibleTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToAnsibleInverseTable is the table name for the Ansible entity.
	// It exists in this package in order to avoid circular dependency with the "ansible" package.
	ProvisioningScheduledStepToAnsibleInverseTable = "ansibles"
	// ProvisioningScheduledStepToAnsibleColumn is the table column denoting the ProvisioningScheduledStepToAnsible relation/edge.
	ProvisioningScheduledStepToAnsibleColumn = "provisioning_scheduled_step_provisioning_scheduled_step_to_ansible"
	// ProvisioningScheduledStepToAgentTaskTable is the table that holds the ProvisioningScheduledStepToAgentTask relation/edge.
	ProvisioningScheduledStepToAgentTaskTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToAgentTaskInverseTable is the table name for the AgentTask entity.
	// It exists in this package in order to avoid circular dependency with the "agenttask" package.
	ProvisioningScheduledStepToAgentTaskInverseTable = "agent_tasks"
	// ProvisioningScheduledStepToAgentTaskColumn is the table column denoting the ProvisioningScheduledStepToAgentTask relation/edge.
	ProvisioningScheduledStepToAgentTaskColumn = "agent_task_agent_task_to_provisioning_scheduled_step"
	// ProvisioningStepToPlanTable is the table that holds the ProvisioningStepToPlan relation/edge.
	ProvisioningStepToPlanTable = "provisioning_scheduled_steps"
	// ProvisioningStepToPlanInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	ProvisioningStepToPlanInverseTable = "plans"
	// ProvisioningStepToPlanColumn is the table column denoting the ProvisioningStepToPlan relation/edge.
	ProvisioningStepToPlanColumn = "plan_plan_to_provisioning_scheduled_step"
	// ProvisioningScheduledStepToGinFileMiddlewareTable is the table that holds the ProvisioningScheduledStepToGinFileMiddleware relation/edge.
	ProvisioningScheduledStepToGinFileMiddlewareTable = "provisioning_scheduled_steps"
	// ProvisioningScheduledStepToGinFileMiddlewareInverseTable is the table name for the GinFileMiddleware entity.
	// It exists in this package in order to avoid circular dependency with the "ginfilemiddleware" package.
	ProvisioningScheduledStepToGinFileMiddlewareInverseTable = "gin_file_middlewares"
	// ProvisioningScheduledStepToGinFileMiddlewareColumn is the table column denoting the ProvisioningScheduledStepToGinFileMiddleware relation/edge.
	ProvisioningScheduledStepToGinFileMiddlewareColumn = "gin_file_middleware_gin_file_middleware_to_provisioning_scheduled_step"
)

// Columns holds all SQL columns for provisioningscheduledstep fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldRunTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "provisioning_scheduled_steps"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"agent_task_agent_task_to_provisioning_scheduled_step",
	"gin_file_middleware_gin_file_middleware_to_provisioning_scheduled_step",
	"plan_plan_to_provisioning_scheduled_step",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_scheduled_step",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_provisioned_host",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_script",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_command",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_dns_record",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_file_delete",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_file_download",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_file_extract",
	"provisioning_scheduled_step_provisioning_scheduled_step_to_ansible",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypeScript       Type = "Script"
	TypeCommand      Type = "Command"
	TypeDNSRecord    Type = "DNSRecord"
	TypeFileDelete   Type = "FileDelete"
	TypeFileDownload Type = "FileDownload"
	TypeFileExtract  Type = "FileExtract"
	TypeAnsible      Type = "Ansible"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeScript, TypeCommand, TypeDNSRecord, TypeFileDelete, TypeFileDownload, TypeFileExtract, TypeAnsible:
		return nil
	default:
		return fmt.Errorf("provisioningscheduledstep: invalid enum value for type field: %q", _type)
	}
}

// MarshalGQL implements graphql.Marshaler interface.
func (_type Type) MarshalGQL(w io.Writer) {
	io.WriteString(w, strconv.Quote(_type.String()))
}

// UnmarshalGQL implements graphql.Unmarshaler interface.
func (_type *Type) UnmarshalGQL(val interface{}) error {
	str, ok := val.(string)
	if !ok {
		return fmt.Errorf("enum %T must be a string", val)
	}
	*_type = Type(str)
	if err := TypeValidator(*_type); err != nil {
		return fmt.Errorf("%s is not a valid Type", str)
	}
	return nil
}
