// Code generated by ent, DO NOT EDIT.

package scheduledstep

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the scheduledstep type in the database.
	Label = "scheduled_step"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHclID holds the string denoting the hcl_id field in the database.
	FieldHclID = "hcl_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldStep holds the string denoting the step field in the database.
	FieldStep = "step"
	// FieldStartTime holds the string denoting the start_time field in the database.
	FieldStartTime = "start_time"
	// FieldEndTime holds the string denoting the end_time field in the database.
	FieldEndTime = "end_time"
	// FieldInterval holds the string denoting the interval field in the database.
	FieldInterval = "interval"
	// FieldRepeated holds the string denoting the repeated field in the database.
	FieldRepeated = "repeated"
	// EdgeScheduledStepToEnvironment holds the string denoting the scheduledsteptoenvironment edge name in mutations.
	EdgeScheduledStepToEnvironment = "ScheduledStepToEnvironment"
	// Table holds the table name of the scheduledstep in the database.
	Table = "scheduled_steps"
	// ScheduledStepToEnvironmentTable is the table that holds the ScheduledStepToEnvironment relation/edge.
	ScheduledStepToEnvironmentTable = "scheduled_steps"
	// ScheduledStepToEnvironmentInverseTable is the table name for the Environment entity.
	// It exists in this package in order to avoid circular dependency with the "environment" package.
	ScheduledStepToEnvironmentInverseTable = "environments"
	// ScheduledStepToEnvironmentColumn is the table column denoting the ScheduledStepToEnvironment relation/edge.
	ScheduledStepToEnvironmentColumn = "environment_environment_to_scheduled_step"
)

// Columns holds all SQL columns for scheduledstep fields.
var Columns = []string{
	FieldID,
	FieldHclID,
	FieldName,
	FieldDescription,
	FieldStep,
	FieldStartTime,
	FieldEndTime,
	FieldInterval,
	FieldRepeated,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "scheduled_steps"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"environment_environment_to_scheduled_step",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
