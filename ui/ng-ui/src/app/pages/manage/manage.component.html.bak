<mat-card class="laforge-card">
  <mat-card-header *ngIf="!envIsSelected()">
    <mat-card-title>Select an Environment using the dropdown above</mat-card-title>
  </mat-card-header>
  <mat-card-header *ngIf="environment | async as _environment">
    <div class="env-header d-flex align-items-center justify-content-between">
      <div class="env-info w-50">
        <mat-card-title>
          {{ _environment.name }}
          <ng-container *ngIf="planStatusesLoading || agentStatusesLoading">
            <i class="fad fa-1x fa-spinner-third fa-spin mx-2"></i>
            <small>Loading {{ agentStatusesLoading ? 'agent statuses' : 'plans' }}...</small>
          </ng-container>
        </mat-card-title>
        <mat-card-subtitle>{{ _environment.description }}</mat-card-subtitle>
      </div>
      <div class="controls">
        <button
          mat-icon-button
          color="warn"
          aria-label="Delete the current build"
          title="Delete"
          (click)="toggleDeleteBuildModal()"
          [disabled]="!canDeleteBuild()"
          [disableRipple]="!canDeleteBuild()"
        >
          <i class="fad fa-bomb text-inherit"></i>
        </button>
        <button
          mat-icon-button
          color="warn"
          aria-label="Rebuild the selected objects"
          title="Rebuild"
          (click)="rebuildEnv()"
          [disabled]="!selectionMode && !canRebuildBuild()"
          [disableRipple]="!selectionMode && !canRebuildBuild()"
        >
          <i class="fad fa-undo-alt text-inherit"></i>
        </button>
        <button
          mat-icon-button
          color="accent"
          [attr.aria-label]="selectionMode ? 'Cancel Selection' : 'Select multiple to rebuild'"
          [attr.title]="selectionMode ? 'Cancel Selection' : 'Select multiple to rebuild'"
          (click)="toggleSelectionMode()"
          [disabled]="!canRebuildBuild()"
          [disableRipple]="!canRebuildBuild()"
        >
          <i class="fad text-inherit" [ngClass]="selectionMode ? 'fa-times' : 'fa-check-square'"></i>
        </button>
      </div>
    </div>
    <mat-table [dataSource]="[_environment]" class="bg-gray-100">
      <ng-container matColumnDef="TeamCount">
        <mat-header-cell *matHeaderCellDef> # Teams </mat-header-cell>
        <mat-cell *matCellDef="let env"> {{ env.team_count }} </mat-cell>
      </ng-container>
      <ng-container matColumnDef="AdminCIDRs">
        <mat-header-cell *matHeaderCellDef> Admin CIDRs </mat-header-cell>
        <mat-cell *matCellDef="let env"> {{ env.admin_cidrs.join(', ') }} </mat-cell>
      </ng-container>
      <ng-container matColumnDef="ExposedVDIPorts">
        <mat-header-cell *matHeaderCellDef> Exposed VDI Ports </mat-header-cell>
        <mat-cell *matCellDef="let env"> {{ env.exposed_vdi_ports.join(', ') }} </mat-cell>
      </ng-container>
      <!-- <ng-container matColumnDef="maintainer">
        <mat-header-cell *matHeaderCellDef> Maintainer </mat-header-cell>
        <mat-cell *matCellDef="let env"> {{ env.maintainer.name }} <{{ env.maintainer.email }}> </mat-cell>
      </ng-container> -->
      <mat-header-row *matHeaderRowDef="environmentDetailsCols"></mat-header-row>
      <mat-row *matRowDef="let row; columns: environmentDetailsCols"></mat-row>
    </mat-table>
  </mat-card-header>
  <mat-card-content *ngIf="build | async as _build">
    <app-team *ngFor="let team of _build.buildToTeam | sortBy: 'asc':'team_number'" [team]="team" [selectable]="selectionMode"></app-team>
  </mat-card-content>
</mat-card>
